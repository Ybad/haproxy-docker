#!/bin/bash

PIDFILE=/tmp/ucarp.pid
trap "shutdown" SIGINT SIGTERM

shutdown() {
  RET=$1
  echo "Shutting down"
  PID=`cat $PIDFILE`
  if [ -z "$PID" ]
  then
    echo "ucarp pid not found"
    exit 99
  fi

  echo "Demoting master"
  kill -USR2 $PID
  sleep 1
  echo "Sending TERM to ucarp"
  kill $PID
  sleep 1
  echo "Sending KILL to ucarp" # we need to make sure everything is dead before
  kill -9 $PID                 # ucarp might promote itself to master afer 3s again
  exit $RET
}

export VIP=$1
export PASS=$2
export GW=$3
export NET=$4
export DEV=${DEV-eth1}

if [ -z "$PASS" ]
then
  echo "$0 virtual-ip password"
  exit 1
fi

# Generate keys if not provided
[ -f nginx.d/dhparam.pem ] ||
      openssl dhparam -out nginx.d/dhparam.pem 2048
[ -f nginx.d/server-key.pem ] ||
      openssl genrsa -out nginx.d/server-key.pem 2048
[ -f nginx.d/server-csr.pem ] ||
      openssl req -new -key nginx.d/server-key.pem -out nginx.d/server-csr.pem -subj /CN=*/
[ -f nginx.d/server-cert.pem ] ||
      openssl x509 -req -in nginx.d/server-csr.pem -out nginx.d/server-cert.pem -signkey nginx.d/server-key.pem -days 3650

# Check is haproxy.cfg is valid before we start ucarp
haproxy -c -f /haproxy/haproxy.cfg
nginx -t -c /haproxy/nginx.conf

( /usr/sbin/nginx   -c /haproxy/nginx.conf;  shutdown 1 ) &
( /usr/sbin/haproxy -f /haproxy/haproxy.cfg; shutdown 2 ) &

/haproxy/scripts/ucarp &
echo $! > $PIDFILE
wait $!
